Cell class do 
    //atributes 
    set rowIndex := 0
    set colIndex := 0
    set type := '\0'
    set color := '\0'
    set horizontalFigure := null
    set verticalFigure := null
    set Lfigure := null
    set Tfigure := null
    set TYPES := "RVHWB"
    set COLORS := "123456"
    constructor Cell(cellString, rowIndex, colIndex) do
        rowIndex := rowIndex
        colIndex := colIndex
        type := cellString[0]
        color := cellString[1]
    end
    function validate () do     //returns boolean
        if TYPES have type AND COLORS have color do 
            return true
        end
        return false
    end

    function compareEquals (otherCell) do 
        if this Cell color equals to otherCell color do 
            return ture
        end
    end

    function exists (gameBoard, rowIndex, colIndex) do 
        if row < gameBoard(row) AND col < gameBoard(col) do
            return true
        end
        return false
    end

    function boolean hasFigure() do 
        if (verticalFigure OR horizontalFigure  ) NOT null do 
            return true
        end

        return false
    end

    function priorityFigure() do  //returns Figure object
        if verticalFigure exist and verticalFigure(Cells) >= 5 do 
            return verticalFigure
        end
        else if horizontalalFigure exist and horizontalalFigure(Cells) >= 5 do 
            return horizontalalFigure
        end
        else if LFigure extist do 
            return LFigure
        end
        else if Tfigure exist do 
            return Tfigure
        end
        else if verticalFigure exist do 
            return verticalFigure
        end
        else if horizontalalFigure exist do 
            return horizontalalFigure
        end

        else do 
            return null
        end
    end

    procedure determinateType(eliminateFigure) do 
        switch(eliminateFigure.type) do 
            case 'V': setTypeHorizontalOrVerticalFigures('V', eliminateFigure)
            case 'H': setTypeHorizontalOrVerticalFigures('H', eliminateFigure)
            case 'L': 
                type = 'W'
                color = eliminateFigure.getColor()
            case 'T': 
                type = 'W'
                color = eliminateFigure.getColor()
                
        end
    end

    procedure setTypeHorizontalOrVerticalFigures (type, eliminateFigure) do
        if eliminateFigure.items() <= 3 do
            type = '-'
            color = '-'
        end

        else if eliminateFigure.items() == 4 do
            type = type
            color = eliminateFigure.getColor()
        end

        else if eliminateFigure.items() >= 5 do
            type = 'B'
            color = eliminateFigure.getColor()
        end
    end
end